/**
\mainpage MotorDriverCard

The MotorDriverCard library provides an interface to the MD22 motor driver card FMC. It offers facilities for low-level communication as well as high-level functionality to operate the motor.

For communication to the motor driver and motor controller of the MD22, SPI commands are handled and sent via PCIe.
Hence, the corresponding firmware on the FMC carrier only has to adapt between PCIe and SPI interfaces. For operation of a motor,
a state machine representing the basic operation modes and error checking are implemented. All position values can be entered and retrieved in a user-defined unit.
The main user interface is provided by the \c StepperMotor and \c LinearStepperMotor classes.


\section getting_started Getting Started

FIXME: Put documentation how to use the library

NOTE: Currently, the interface classes are implemented in the ChimeraTK namespaces.

\li \ref stepper_motor - A basic interface for a generic stepper motor
\li \ref linear_stepper_motor - An interface for a linear stepper motor with end switches
\li \ref motor_driver_card_config_docu

\page motor_driver_card_config_docu Why you need a motor driver card config and how to create it

The driver and controller chips on the MD22 need to be configured for each motor. The parameters are stored in
 an XML file. There is one file per MD22 MotorDriverCard, so one config for two motors. The reason is that there
are common registers for both motors on the controller chip, and sometimes there is information of both motors
in a single register.

\section gui_parameters Creating an XML config file

You can use the QtMotorConfigCalculator to generate a motor config file. You need some information from the
 motor's data sheet:
\li The maximum coil current
\li The number of full steps per turn
\li The maximum desired speed in RPMs
\li Does the motor have end switches?

If the motor does have end switches, you definitely should use them for safety reasons. However, if the motor does
not have end switches you have to disable them because not connected end switches are detected as 'active' and
the motor would not move.

The other parameters usually can stay at their default values. The clock frequency if 32 MHz is hard coded in the
firmware and probably will never change.

\image html QtMotorConfigCalculator00.06.01.png


\section expert_parameters Expert Section: Manually editing the config XML file

The default parameters are made to work reliably, but operation will probably not be as smooth or efficent
as possible with the particular motor and use case. If you want to tweak the parameters according to the TMC429
 and TMC260 data sheets, you can manually edit the entries for the corresponding classes derived
from ChimeraTK::TMC260Word and ChimeraTK::TMC429InputWord.

\include MotorDriverCardDefaultConfig.xml
*/

/**
\example MotorDriverCardDefaultConfig.xml
The complete MotorDriverCard XML configuration with default parameters
*/
